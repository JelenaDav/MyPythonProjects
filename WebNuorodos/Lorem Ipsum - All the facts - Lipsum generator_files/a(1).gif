<esi:comment text="This ESI file extracts the value from akamai variables common to all esi files"/><esi:assign name="emptypage" value="''"/><esi:assign name="gdprProcess" value="$(PMUSER_PROCESS_GDPR{'value'})"/><esi:assign name="cv" value="$(PMUSER_CV_VALUE{'value'})"/><esi:assign name="safeQueryString" value="$(PMUSER_LOG_QS_SAFE{'value'})"/><esi:assign name="logOthVersion" value="$(PMUSER_LOG_OTH_VERSION{'value'})"/><esi:assign name="defaultLog" value="$(PMUSER_DEFAULT_LOG{'value'})"/><esi:assign name="defaultLog" value="$base64_decode($(defaultLog))"/><esi:assign name="logLevel" value="d"/><esi:assign name="blockCode" value="$(PMUSER_BLOCK_CODE{'value'})"/><esi:assign name="isBlocked" value="$(blockCode) != 'no_block'"/><esi:assign name="gppEnabled" value="$(PMUSER_GPP_ENABLED{'value'})"/><esi:assign name="gppProcess" value="$(PMUSER_PROCESS_GPP{'value'})"/><esi:assign name="gppString" value="$(PMUSER_GPP{'value'})"/><esi:assign name="gppSidString" value="$(PMUSER_GPP_SID{'value'})"/><esi:assign name="ccpaStatus" value="$(PMUSER_CCPA_STATUS{'value'})"/><esi:assign name="gvlId" value="$(PMUSER_GVL_ID{'value'})"/><esi:choose><esi:when test="$(gppEnabled)=='true'"><esi:assign name="gvlId" value="$(PMUSER_TCF_GVLID{'value'})"/></esi:when></esi:choose><esi:choose><esi:when test="$(gdprProcess) == 'PROCESS' || ($(gppProcess) == 'PROCESS' && $(gppSidString) == '2')"><esi:assign name="blockCode" value="'EEA'"/></esi:when><esi:when test="$(gppEnabled) == 'true' && $(gppSidString) == '6' && $(gppProcess) == 'PROCESS'"><esi:assign name="blockCode" value="'us_privacy'"/></esi:when></esi:choose><esi:assign name="purposes" value="[2,3,5,7,8,9,10]"/><esi:assign name="purposesLI" value="''"/><esi:assign name="flexPurposes" value="''"/><esi:assign name="purpose1" value="1"/><esi:assign name="specialFeatures" value="''"/><esi:assign name="pxcelvarOth" value="$(PMUSER_LOG_VAR_OTH{'value'})"/><esi:assign name="pxcelvarOth" value="$base64_decode($(pxcelvarOth))"/><esi:function name="append_to_pxcelvarOth"><esi:comment text="Append the string parameter to pxcelvarOth and return it"/><esi:assign name="newstr" value="$(ARGS{0})"/><esi:choose><esi:when test="!$is_empty($(pxcelvarOth))"><esi:assign name="pxcelvarOth" value="$(pxcelvarOth)+','"/></esi:when></esi:choose><esi:assign name="pxcelvarOth" value="$(pxcelvarOth)+$(newstr)"/><esi:return value="$(pxcelvarOth)"/></esi:function><esi:assign name="position" value="0"/><esi:function name="gdprCheck"><esi:assign name="cv" value="$(ARGS{0})"/><esi:assign name="vid" value="$(ARGS{1})"/><esi:assign name="versionByte" value="$substr($(cv), 0, 1)"/><esi:choose><esi:when test="$(versionByte) == 'C' && $validateConsentString($(cv))"><esi:assign name="cv_split" value="$string_split($(cv), '.')"/><esi:assign name="core" value="$(cv_split{0})"/><esi:foreach item="itm" collection="$(cv_split)"><esi:choose><esi:when test="!$(itm_start)"><esi:choose><esi:when test="$(itm{0}) matches '''^[I-P]$'''"><esi:assign name="disclosed" value="$(itm)"/></esi:when><esi:when test="$(itm{0}) matches '''^[Q-X]$'''"><esi:assign name="allowed" value="$(itm)"/></esi:when></esi:choose></esi:when></esi:choose></esi:foreach><esi:assign name="isServiceSpecific" value="$substr($(core), 23, 1) matches '''^[g-z\+\/\-\_]$'''"/><esi:assign name="core_temp" value="$b64tobin($substr($(core), 23, 13))"/><esi:assign name="core_result" value="$validateConsentString($(cv))"/><esi:assign name="core_result" value="$(core_result) && ($is_empty($(specialFeatures)) || $bitCheck($substr($(core_temp), 2, 10), $(specialFeatures), 0))"/><esi:assign name="purposeOne" value="$substr($(core_temp), 14, 1) == '1'"/><esi:assign name="purposeOneTreatment" value="$substr($(core_temp), 62, 1) == '1'"/><esi:assign name="core_result" value="$(core_result) && (!$(purpose1) || ($(isServiceSpecific) && ($(purposeOneTreatment) || $(purposeOne)) || !$(purposeOneTreatment) && $(purposeOne)))"/><esi:assign name="position" value="$(position) + 213"/><esi:assign name="validPurposesTemp" value="$purposesCheck($substr($(core_temp), 15, 9), $(vid), $(core), $(position))"/><esi:assign name="position" value="$(validPurposesTemp{1})"/><esi:assign name="validPurposesLITemp" value="$purposesCheck($substr($(core_temp), 39, 9), $(vid), $(core), $(position))"/><esi:assign name="position" value="$(validPurposesLITemp{1})"/><esi:assign name="core_result" value="$(core_result) && $purposesEval($(purposes), $(purposesLI), $(flexPurposes), $(validPurposesTemp{0}), $(validPurposesLITemp{0}), $(core), $(position), $(vid), $(isServiceSpecific))"/><esi:assign name="disclosed_exists" value="$exists($(disclosed))"/><esi:assign name="allowed_exists" value="$exists($(allowed))"/><esi:choose><esi:when test="$(core_result) || $(isServiceSpecific) || !$(disclosed_exists)"><esi:return value="$(core_result)"/></esi:when></esi:choose><esi:assign name="disclosed_result" value="$vendorIdCheck2($(vid), $(disclosed), 0, 3)"/><esi:choose><esi:when test="$(disclosed_result{0})"><esi:return value="0"/></esi:when></esi:choose><esi:choose><esi:when test="$(allowed_exists)"><esi:assign name="allowed_result" value="$vendorIdCheck2($(vid), $(allowed), 0, 3)"/><esi:return value="$(allowed_result{0})"/></esi:when></esi:choose><esi:return value="1"/></esi:when></esi:choose><esi:return value="0"/></esi:function><esi:function name="purposesCheck"><esi:assign name="purposeStr" value="$(ARGS{0})"/><esi:assign name="vid" value="$(ARGS{1})"/><esi:assign name="core" value="$(ARGS{2})"/><esi:assign name="position" value="$(ARGS{3})"/><esi:assign name="vendorCheck" value="$vendorIdCheck2($(vid), $(core), 0, $(position))"/><esi:choose><esi:when test="!$(vendorCheck{0})"><esi:assign name="purposeStr" value="'000000000'"/></esi:when></esi:choose><esi:return value="[$(purposeStr), $(vendorCheck{1})]"/></esi:function><esi:function name="purposesEval"><esi:assign name="pList" value="$(ARGS{0})"/><esi:assign name="pLIList" value="$(ARGS{1})"/><esi:assign name="flexList" value="$(ARGS{2})"/><esi:assign name="validPList" value="$(ARGS{3})"/><esi:assign name="validPLIList" value="$(ARGS{4})"/><esi:assign name="coreStr" value="$(ARGS{5})"/><esi:assign name="position" value="$(ARGS{6})"/><esi:assign name="vendorId" value="$(ARGS{7})"/><esi:assign name="isServiceSpecific" value="$(ARGS{8})"/><esi:assign name="temp" value="[$(validPList), $(validPLIList)]"/><esi:choose><esi:when test="$(isServiceSpecific)"><esi:assign name="temp" value="($publishCheck($(vendorId), $(coreStr), $(position), $(validPList), $(validPLIList)))"/></esi:when></esi:choose><esi:return value="($is_empty($(pList)) || $bitCheck($(temp{0}), $(pList), 1)) && ($is_empty($(pLIList)) || $bitCheck($(temp{1}), $(pLIList), 1)) && ($is_empty($(flexList)) || $bitCheck($(temp{0}), $(flexList), 1, $(temp{1})))"/></esi:function><esi:assign name="b64safemap" value="'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'"/><esi:function name="vendorIdCheck2"><esi:assign name="vendor_id" value="$(ARGS{0})"/><esi:assign name="fullStr" value="$(ARGS{1})"/><esi:assign name="default_usage" value="$(ARGS{2})"/><esi:assign name="position" value="$(ARGS{3})"/><esi:assign name="maxVendorAndIsRange" value="$b64tobin($substr($(fullStr), $(position)/6, 4))"/><esi:assign name="maxVendorBin" value="$convertToDec($substr($(maxVendorAndIsRange), $(position)%6, 16), 2)"/><esi:assign name="encoding_type" value="$substr($(maxVendorAndIsRange), $(position)%6 + 16, 1)"/><esi:assign name="position" value="$(position) + 17"/><esi:choose><esi:when test="$(encoding_type) == '0'"><esi:comment text="encoding type is bit field"/><esi:assign name="vendor_list" value="$substr($b64tobin($substr($(fullStr), ($(position) + $(vendor_id) -1)/6, 1)), ($(position) + $(vendor_id) -1)%6, 1)"/><esi:assign name="position" value="$(position) + $(maxVendorBin)"/><esi:return value="[$(vendor_list) == '1', $(position)]"/></esi:when><esi:otherwise><esi:comment text="encoding type is range field"/><esi:assign name="num_entry" value="$convertToDec($substr($b64tobin($substr($(fullStr), $(position)/6, 3)), $(position)%6, 12), 2)"/><esi:assign name="position" value="$(position) + 12"/><esi:assign name="range_field_check" value="$rangeCheck2($(num_entry), $(fullStr), $(vendor_id), $(position))"/><esi:return value="$(range_field_check)"/></esi:otherwise></esi:choose></esi:function><esi:function name="convertToDec"><esi:assign name="str" value="$(ARGS{0})"/><esi:assign name="base" value="$(ARGS{1})"/><esi:assign name="binvalue" value="0"/><esi:foreach item="myItem" collection="$(str)"><esi:choose><esi:when test="$(base) == 64"><esi:assign name="addendum" value="$index($(b64safemap), $(myItem))"/></esi:when><esi:when test="$(base) == 2"><esi:assign name="addendum" value="$int($(myItem))"/></esi:when></esi:choose><esi:assign name="binvalue" value="$(binvalue) * $(base) + $(addendum)"/></esi:foreach><esi:return value="$(binvalue)"/></esi:function><esi:function name="b64tobin"><esi:assign name="str" value="$(ARGS{0})"/><esi:assign name="bin_str" value="''"/><esi:foreach item="myItem" collection="$(str)"><esi:assign name="item_index" value="$index($(b64safemap), $(myItem))"/><esi:assign name="binvalue" value="''"/><esi:foreach item="i" collection="[0,1,2,3,4,5]"><esi:assign name="binvalue" value="$str($(item_index)%2) + $(binvalue)"/><esi:assign name="item_index" value="$(item_index)/2"/></esi:foreach><esi:assign name="bin_str" value="$(bin_str) + $(binvalue)"/></esi:foreach><esi:return value="$(bin_str)"/></esi:function><esi:function name="rangeCheck2"><esi:assign name="num_entry" value="$(ARGS{0})"/><esi:assign name="range_field" value="$(ARGS{1})"/><esi:assign name="vid" value="$(ARGS{2})"/><esi:assign name="position" value="$(ARGS{3})"/><esi:comment text="Expected maximum value of num_entry is 16"/><esi:foreach item="iteration" collection="[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]"><esi:choose><esi:when test="$(iteration) >$(num_entry)"><esi:return value="[0, $(position)]"/></esi:when></esi:choose><esi:assign name="tmpStr" value="$substr($b64tobin($substr($(range_field), $(position)/6, 7)), $(position)%6, 33)"/><esi:assign name="type" value="$substr($(tmpStr), 0, 1)"/><esi:choose><esi:when test="$(type) == '0'"><esi:assign name="vendor_val" value="$convertToDec($substr($(tmpStr), 1, 16), 2)"/><esi:assign name="position" value="$(position) + 17"/><esi:choose><esi:when test="$str($(vendor_val)) == $(vid)"><esi:return value="[1, $(position)]"/></esi:when></esi:choose></esi:when><esi:otherwise><esi:assign name="vendor_val1" value="$convertToDec($substr($(tmpStr), 1, 16), 2)"/><esi:assign name="vendor_val2" value="$convertToDec($substr($(tmpStr), 17, 16), 2)"/><esi:assign name="position" value="$(position) + 33"/><esi:choose><esi:when test="$(vendor_val1)<= $int($(vid)) && $(vendor_val2) >= $int($(vid))"><esi:return value="[1, $(position)]"/></esi:when></esi:choose></esi:otherwise></esi:choose></esi:foreach></esi:function><esi:function name="publishCheck"><esi:assign name="vendor_id" value="$(ARGS{0})"/><esi:assign name="full_str" value="$(ARGS{1})"/><esi:assign name="position" value="$(ARGS{2})"/><esi:assign name="purposes" value="$(ARGS{3})"/><esi:assign name="purposesLI" value="$(ARGS{4})"/><esi:choose><esi:when test="!$exists($substr($(full_str), $(position)/6, $len($(full_str))))"><esi:return value="[$(purposes), $(purposesLI)]"/></esi:when></esi:choose><esi:assign name="pub_num_entry" value="$convertToDec($substr($b64tobin($substr($(full_str), $(position)/6, 3)), $(position)%6, 12), 2)"/><esi:assign name="position" value="$(position) + 12"/><esi:foreach item="itr" collection="[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]"><esi:choose><esi:when test="$(itr) >$(pub_num_entry)"><esi:return value="[$(purposes), $(purposesLI)]"/></esi:when><esi:otherwise><esi:assign name="purposeId" value="$convertToDec($substr($b64tobin($substr($(full_str), $(position)/6, 2)), $(position)%6, 6), 2)"/><esi:assign name="position" value="$(position) + 6"/><esi:assign name="restrictionType" value="$substr($b64tobin($substr($(full_str), $(position)/6, 2)), $(position)%6, 2)"/><esi:assign name="position" value="$(position) + 2"/><esi:assign name="temp_num_entry" value="$convertToDec($substr($b64tobin($substr($(full_str), $(position)/6, 3)), $(position)%6, 12), 2)"/><esi:assign name="position" value="$(position) + 12"/><esi:assign name="rangeTempCheck" value="$rangeCheck2($(temp_num_entry), $(full_str), $(vendor_id), $(position))"/><esi:assign name="position" value="$(rangeTempCheck{1})"/><esi:choose><esi:when test="$(rangeTempCheck{0})"><esi:choose><esi:when test="$substr($(restrictionType), 0, 1) == '0'"><esi:assign name="purposesLI" value="$substr($(purposesLI), 0, $(purposeId) - 2) + '0' + $substr($(purposesLI), $(purposeId) - 1, $len($(purposeId)))"/></esi:when></esi:choose><esi:choose><esi:when test="$substr($(restrictionType), 1, 1) == '0'"><esi:assign name="purposes" value="$substr($(purposes), 0, $(purposeId) - 2) + '0' + $substr($(purposes), $(purposeId) - 1, $len($(purposeId)))"/></esi:when></esi:choose></esi:when></esi:choose></esi:otherwise></esi:choose></esi:foreach><esi:return value="[$(purposes), $(purposesLI)]"/></esi:function><esi:function name="bitCheck"><esi:assign name="bitStr" value="$(ARGS{0})"/><esi:assign name="original" value="$(ARGS{1})"/><esi:assign name="skip" value="$(ARGS{2})"/><esi:assign name="bitStr2" value="$(ARGS{3})"/><esi:choose><esi:when test="$is_empty($(bitStr2))"><esi:assign name="bitStr2" value="'000000000'"/></esi:when></esi:choose><esi:assign name="res" value="1"/><esi:foreach item="itr" collection="$(original)"><esi:assign name="res" value="$(res) && ($substr($(bitStr), $(itr) - 1 - $(skip), 1) == '1' || $substr($(bitStr2), $(itr) - 1 - $(skip), 1) == '1')"/></esi:foreach><esi:return value="$(res)"/></esi:function><esi:function name="validateConsentString"><esi:assign name="consent_vector" value="$(ARGS{0})"/><esi:assign name="time_now" value="$time()"/><esi:assign name="created_date1" value="($convertToDec($substr($(consent_vector), 1, 3), 64)/10)*64*64*64"/><esi:assign name="created_date2" value="$convertToDec($substr($(consent_vector), 4, 3), 64)/10"/><esi:assign name="created_date" value="$(created_date1) + $(created_date2)"/><esi:assign name="modified_date1" value="($convertToDec($substr($(consent_vector), 7, 3), 64)/10)*64*64*64"/><esi:assign name="modified_date2" value="$convertToDec($substr($(consent_vector), 10, 3), 64)/10"/><esi:assign name="modified_date" value="$(modified_date1) + $(modified_date2)"/><esi:return value="($(created_date)<= $(modified_date)) && ($(modified_date)<= $(time_now))"/></esi:function><esi:function name="gppCheck"><esi:assign name="gppVal" value="$(ARGS{0})"/><esi:assign name="gppSidVal" value="$(ARGS{1})"/><esi:assign name="gpp_split" value="$string_split($(gppVal), '~')"/><esi:assign name="gppHeader" value="$(gpp_split{0})"/><esi:assign name="sectionsCount" value="$convertToDec($substr($(gppHeader), 2, 2), 64)"/><esi:assign name="sectString" value="$b64tobin($substr($(gppHeader), 4, $len($(gppHeader))-4))"/><esi:assign name="sectStringLen" value="$len($(sectString))"/><esi:assign name="sectStringIndex" value="0"/><esi:assign name="secCollection" value="''"/><esi:assign name="secOffset" value="0"/><esi:choose><esi:when test="$(sectionsCount) > 0 && $(sectionsCount)< 13"><esi:foreach item="amountitm" collection="[1..$(sectionsCount)]"><esi:assign name="encoding_type" value="$int($(sectString{$(sectStringIndex)}))"/><esi:assign name="start_index" value="0"/><esi:assign name="end_index" value="0"/><esi:foreach item="etitm" collection="[0..$(encoding_type)]"><esi:assign name="sectionIndex" value="''"/><esi:assign name="prev_char" value="0"/><esi:foreach item="ssitm" collection="[0..$(sectStringLen)]"><esi:assign name="sectStringIndex" value="$(sectStringIndex)+1"/><esi:assign name="curr_char" value="$(sectString{$(sectStringIndex)})"/><esi:choose><esi:when test="($int($(curr_char)) == $(prev_char)) && ($(prev_char) == 1)"><esi:break/></esi:when></esi:choose><esi:assign name="sectionIndex" value="$(sectionIndex)+$(curr_char)"/><esi:assign name="prev_char" value="$int($(curr_char))"/></esi:foreach><esi:assign name="sectionIndex" value="$fibDecode($(sectionIndex)) + $(secOffset)"/><esi:assign name="secOffset" value="$(sectionIndex)"/><esi:choose><esi:when test="$(etitm) == 0"><esi:assign name="start_index" value="$(sectionIndex)"/></esi:when><esi:when test="$(etitm) == 1"><esi:assign name="end_index" value="$(sectionIndex)"/></esi:when></esi:choose></esi:foreach><esi:choose><esi:when test="$(encoding_type) == 1"><esi:foreach item="sritem" collection="[$(start_index)..$(end_index)]"><esi:assign name="secCollection" value="$(secCollection)+' '+$(sritem)"/></esi:foreach></esi:when><esi:when test="$(encoding_type) == 0"><esi:assign name="secCollection" value="$(secCollection)+' '+$(start_index)"/></esi:when></esi:choose><esi:assign name="sectStringIndex" value="$(sectStringIndex)+1"/></esi:foreach></esi:when></esi:choose><esi:assign name="secCollection" value="$strip($(secCollection))"/><esi:assign name="secCollSplit" value="$string_split($(secCollection), ' ')"/><esi:assign name="discreteSecs" value="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"/><esi:assign name="gpp_disc_it" value="1"/><esi:choose><esi:when test="$len($(secCollSplit)) == $len($(gpp_split))-1"><esi:foreach item="itm" collection="$(secCollSplit)"><esi:choose><esi:when test="$(gpp_disc_it)<$len($(gpp_split))"><esi:assign name="discreteSecs{$int($(itm))-1}" value="$(gpp_split{$(gpp_disc_it)})"/><esi:assign name="gpp_disc_it" value="$(gpp_disc_it)+1"/></esi:when></esi:choose></esi:foreach></esi:when></esi:choose><esi:choose><esi:when test="$(gppSidVal) == '6' && !($(discreteSecs{5}) == 0 || $(discreteSecs{5}) == '')"><esi:return value="$ccpaCheck($(discreteSecs{5}))"/></esi:when></esi:choose><esi:choose><esi:when test="$(gppSidVal) == '2'"><esi:choose><esi:when test="$(discreteSecs{1}) == 0 || $(discreteSecs{1}) == ''"><esi:return value="0"/></esi:when><esi:otherwise><esi:return value="$gdprCheck($(discreteSecs{1}), $int($(gvlId)))"/></esi:otherwise></esi:choose></esi:when></esi:choose><esi:return value="1"/></esi:function><esi:function name="ccpaCheck"><esi:assign name="ccpaString" value="$strip($(ARGS{0}))"/><esi:choose><esi:when test="$(ccpaStatus)=='BLOCKED' || ($(ccpaStatus) == 'ENABLED' && $(ccpaString) matches '''^1[YNyn\-][Yy][YNyn\-]$''')"><esi:return value="0"/></esi:when></esi:choose><esi:return value="1"/></esi:function><esi:function name="fibDecode"><esi:assign name="actualString" value="$(ARGS{0})"/><esi:assign name="fibSeries" value="[1, 2, 3, 5, 8, 13, 21]"/><esi:assign name="fibVal" value="0"/><esi:foreach item="itm" collection="[0..($len($(actualString))-1)]"><esi:assign name="fibVal" value="$(fibVal)+($int($(actualString{$(itm)}))*$(fibSeries{$(itm)}))"/></esi:foreach><esi:return value="$(fibVal)"/></esi:function><esi:assign name="isReqAllowed" value="0"/><esi:choose><esi:when test="$(gdprProcess)=='ALLOW' || $(gppProcess)=='ALLOW'"><esi:assign name="isReqAllowed" value="1"/></esi:when><esi:when test="$(gdprProcess)=='PROCESS'"><esi:assign name="isReqAllowed" value="$gdprCheck($(cv), $int($(gvlId)))"/></esi:when><esi:when test="$(gppProcess)=='PROCESS'"><esi:assign name="isReqAllowed" value="$gppCheck($(gppString), $(gppSidString))"/></esi:when></esi:choose><esi:assign name="sendImg" value="$(PMUSER_SEND_GIF{'value'})"/><esi:assign name="aIOLoad" value="$(PMUSER_AIO_LOAD{'value'})"/><esi:choose><esi:when test="$(aIOLoad) == 'TRUE' && $(isReqAllowed)"><esi:assign name="domain" value="$(PMUSER_CLIENT_CK_DOMAIN{'value'})"/><esi:assign name="clientckexists" value="$(PMUSER_CLIENT_CK_EXISTS_ONLY{'value'})"/><esi:assign name="cookievalue" value="$(PMUSER_CLIENT_COOKIE_VALUE{'value'})"/><esi:assign name="cookievalue" value="$digest_md5_hex($(cookievalue))"/><esi:choose><esi:when test="$(clientckexists) == 'TRUE'"><esi:assign name="src" value="'https://c009.aqfer.net/v2/entities/cookie~' + $(domain) + '~' + $(cookievalue) + '/attributes'"/><esi:include src="$(src)" method="POST" maxwait="0" onerror="continue"/></esi:when></esi:choose></esi:when><esi:otherwise><esi:choose><esi:when test="$(sendImg) == 'true'">$set_response_code(200, 'GIF89a  ?     ???!?    ,       D ;')</esi:when><esi:otherwise>$set_response_code(204, $(emptypage))</esi:otherwise></esi:choose></esi:otherwise></esi:choose><esi:choose><esi:when test="!$(isReqAllowed)"><esi:choose><esi:when test="!$is_empty($(safeQueryString))">$add_header('Edge-Log-Qs', $(safeQueryString))</esi:when><esi:otherwise>$add_header('Edge-Log-Qs', 'null')</esi:otherwise></esi:choose>$add_header('Edge-Log-Ref', 'null')$add_header('Edge-Log-Ck', 'null')$add_header('Edge-Log-Zip', 'null')$add_header('Edge-Log-Oth', $(logOthVersion) + '!z!' + $(defaultLog) + '!block_code=' + $(blockCode))</esi:when></esi:choose>